class ExitButton:

    def __init__(self, clock):
        self.e = document.createElement('button')
        self.e.innerHTML = 'Close'
        self.e.style.position = 'absolute'
        self.e.style.top = '10px'
        self.e.style.right = '10px'
        self.e.style.color = 'grey'
        self.e.style.backgroundColor = 'rgba(0,0,0,0)'
        self.clock = clock
        self.e.onclick = def():
            clearInterval(self.clock.clock)
            document.body.removeChild(self.clock.canvas)
            document.body.removeChild(self.e)

    def render(self):
        document.body.appendChild(self.e)


class MyClock:
    
    def __init__(self):
        self.canvas = document.createElement('canvas')
        self.canvas.height = window.innerWidth
        self.canvas.width = window.innerWidth
        self.canvas.style.position = 'absolute'
        self.canvas.style.top = '0px'
        self.canvas.style.left = '0px'
        self.ctx = self.canvas.getContext('2d')
        self.radius = Math.min(self.canvas.height, self.canvas.width) / 2
        self.ctx.translate(self.radius, self.radius)
        self.radius = self.radius * 0.9
        self.drawClock.bind(self)()
        self.eb = new ExitButton(self)
        self.clock = setInterval(self.drawClock.bind(self), 1000)


    def drawClock(self):
        self.drawFace.bind(self)()
        self.drawNumbers.bind(self)()
        self.drawTime.bind(self)()


    def drawFace(self):
        self.ctx.beginPath()
        self.ctx.arc(0, 0, self.radius, 0, 2*Math.PI)
        self.ctx.fillStyle = 'white'
        self.ctx.fill()

        grad = self.ctx.createRadialGradient(0,0, self.radius*0.95, 0,0, self.radius*1.05)
        grad.addColorStop(0, '#333')
        grad.addColorStop(0.5, 'white')
        grad.addColorStop(1, '#333')
        self.ctx.strokeStyle = grad
        self.ctx.lineWidth = self.radius*0.1
        self.ctx.stroke();

        self.ctx.beginPath();
        self.ctx.arc(0, 0, self.radius*0.1, 0, 2*Math.PI)
        self.ctx.fillStyle = '#333'
        self.ctx.fill()


    def drawNumbers(self):
        self.ctx.font = self.radius*0.2 + "px arial"
        self.ctx.textBaseline="middle"
        self.ctx.textAlign="center"
        for num in range(1,13):
            ang = num * Math.PI / 6
            self.ctx.rotate(ang)
            self.ctx.translate(0, -self.radius*0.83)
            self.ctx.rotate(-ang)
            self.ctx.fillText(num.toString(), 0, 0)
            self.ctx.rotate(ang)
            self.ctx.translate(0, self.radius*0.83)
            self.ctx.rotate(-ang)


    def drawTime(self):
        now = new Date()
        hour = now.getHours()
        minute = now.getMinutes()
        second = now.getSeconds()
        
        hour=hour%12
        hour=(hour*Math.PI/6)+(minute*Math.PI/(6*60))+(second*Math.PI/(360*60))
        self.drawHand(hour, self.radius*0.5, self.radius*0.07)
        
        minute=(minute*Math.PI/30)+(second*Math.PI/(30*60))
        self.drawHand(minute, self.radius*0.8, self.radius*0.07)
        
        second=(second*Math.PI/30)
        self.drawHand(second, self.radius*0.9, self.radius*0.02)


    def drawHand(self, pos, length, width):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.lineCap = "round"
        self.ctx.moveTo(0,0)
        self.ctx.rotate(pos)
        self.ctx.lineTo(0, -length)
        self.ctx.stroke()
        self.ctx.rotate(-pos)


    def render(self):
        document.body.appendChild(self.canvas)
        self.eb.render()


clock = new MyClock()
clock.render()


